
# NFTProtect2 schema

type System @entity
{
    id: ID!
    arbitratorregistry: Bytes
    coupons: Bytes
    core: Bytes
    userregistry: Bytes
    feeBasic: BigInt
    feeUltra: BigInt
    burnOnAction: Boolean
    scoreThreshold: BigInt
    affiliatePercent: BigInt
}

type Arbitrator @entity
{
    id: ID!
    name: String!
    address: Bytes!
    extraData: Bytes!
}

type Partner @entity
{
    id: ID!
    percent: BigInt!
}

type DID @entity
{
    id: ID!
    provider: String!
}

type User @entity
{
    id: ID!
    referrer: Bytes
    successor: Bytes
    coupons: BigInt!
    entitiesWrapped: [MyEntity!] @derivedFrom(field: "ownerWrapped")
    entitiesOriginal: [MyEntity!] @derivedFrom(field: "ownerOriginal")
}

type MyEntity @entity
{
    id: ID!
    protection: BigInt!
    ownerOriginal: User!
    ownerWrapped: User!
    timestamp: BigInt!
    blocknumber: BigInt!
}

enum Status
{
    InDispute,
    Accepted,
    Rejected
}

type SuccessorRequest @entity
{
    id: ID!
    status: Status!
    user: Bytes!
    successor: Bytes!
    timestamp: BigInt!
    blocknumber: BigInt!
    timestampChange: BigInt
    blocknumberChange: BigInt
}

enum ReqType
{
    OwnershipAdjustment,
    OwnershipRestore,
    Burn
}

enum ReqStatus
{
    Initial,
    Accepted,
    Rejected,
    Disputed,
    DisputeAccepted,
    DisputeRejected
}

type Request @entity
{
    id: ID!
    type: ReqType!
    status: ReqStatus!
    entities: [MyEntity!]
    oldowner: User
    newowner: User
    timestamp: BigInt!
    blocknumber: BigInt!
    timestampChange: BigInt
    blocknumberChange: BigInt
}
